"use strict";

var Promise = require('bluebird') // Promises
    , _ = require('lodash');

var defaultSiteAlias = 'parked'; // The default iste if one is not defined
var siteFilePath = ''; // The full path to the site file
var hostFilePath = ''; // The full path to the host file

/**
 * A middleware that loads hostname based config files
 */
function ar(app, settings) {

    return function (conn) {

        // Define the full file path for the json HOST config file
        hostFilePath = settings.configDir + '/hosts/' + conn.host + jsonExt;

        // Verify the host file exists
        return arFileStatus(hostFilePath)
            .then(function(hostStatus) {

                if(hostStatus === 'file') {

                    return loadJSON(hostFilePath)
                        .then(function(hostConfig) {

                            // Define the full file path for the json SITE config file
                            // Does the host have a site defined?
                            if(typeof hostConfig.site !== 'undefined') {

                                siteFilePath = settings.configDir + '/sites/' + hostConfig.site + jsonExt;
                            }
                            else {
                                // If no site is specfied but the hostname is supported the host is parked.
                                siteFilePath = settings.configDir + '/sites/' + defaultSiteAlias + jsonExt;
                            }
                            // Verify the site file exists
                                return arFileStatus(siteFilePath)
                                    .then(function(siteStatus) {

                                        if(siteStatus === 'file') {

                                            return loadJSON(siteFilePath)
                                                .then(function(siteConfig) {

                                                    // Deep merge the hostConfig into the siteConfig
                                                    _.assign(siteConfig, hostConfig);

                                                    conn.site = siteConfig;

                                                    return conn.call(app)

                                                }); // End loading site JSON
                                        }
                                        else {
                                            return conn.call(app);
                                        }
                                    }); // End site file check
                        }); // End loading host JSON
                } // End the host path type check
        }); // End the host path existence
    }; // End the main return function

}

module.exports = ar;

