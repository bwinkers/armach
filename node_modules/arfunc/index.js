/**
 * ActiveRules functions.
 * These function are used across ActiveRules modules.\
 * They provide promise basde solutions to mnay common tasks witihn an app.
 */
"use strict";

var Promise = require('bluebird')
    , fsp = require('promised-io/fs') // Promises around fs calls;
    , _ = require('lodash')
    , fs = require('fs');

/**
 * Returns stats for the given file or null if it doesn't exist.
 */
exports.getFileStats = function(path) {
    return new Promise(function (resolve, reject) {
        fs.stat(path, function (error, stats) {

            if (error && error.code !== "ENOENT") {
                reject(error);
            } else {
                resolve(stats || null);
            }
        });
    });
};

/**
 * Returns one of directory|file|null
 */
exports.fileStatus = function(path) {

    return this.getFileStats(path)
        .then(function (stats) {

            if (stats && stats.isFile()) {
                return 'file';
            }

            if (stats && stats.isDirectory()) {
                return 'directory'
            }

            return null
        });
};

/**
 * Load a JSON file into a JavaScript object
 */
exports.loadJSON = function(filePath) {

    var jsonObj; // The object to return

    // Return a promise right away
    return new Promise(function (fulfill, reject) {

        return fsp.readFile(filePath, 'utf8')
            .then(function (file) {
                try {
                    jsonObj = JSON.parse(file);
                } catch (err) {
                    // probably bad JSON
                    console.log(err);
                }

                fulfill(jsonObj);

            }, function (err) {
                reject(err);
            });
    });
};